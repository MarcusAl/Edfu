{"ast":null,"code":"// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\nrequire('@rails/ujs').start();\n\nrequire('turbolinks').start();\n\nrequire('@rails/activestorage').start();\n\nrequire('channels');\n\nimport 'bootstrap/dist/js/bootstrap';\nimport 'bootstrap/dist/css/bootstrap';\nimport 'stylesheets/application';\nimport '@fortawesome/fontawesome-free/css/all'; // Uncomment to copy all static images under ../images to the output folder and reference\n// them with the image_pack_tag helper in views (e.g <%= image_pack_tag 'rails.png' %>)\n// or the `imagePath` JavaScript helper below.\n//\n// const images = require.context('../images', true)\n// const imagePath = (name) => images(name, true)\n\nrequire('stylesheets/application.scss');\n\nrequire('trix');\n\nrequire('@rails/actiontext');\n\nvar DarkReader = require('darkreader'); // Dark mode handler\n\n\ndocument.addEventListener('turbolinks:load', function () {\n  var dark_btn = document.getElementById('dark_mode_btn');\n  var isEnabled = false;\n  dark_btn.addEventListener('click', function (event) {\n    if (isEnabled) {\n      DarkReader.disable();\n      isEnabled = false;\n    } else {\n      DarkReader.enable({\n        mode: 2,\n        brightness: 100,\n        contrast: 100,\n        sepia: 10\n      });\n      isEnabled = true;\n    }\n  });\n});","map":{"version":3,"sources":["/Users/MarkAllen/code/MarcusAl/Edfu/app/javascript/packs/application.js"],"names":["require","start","DarkReader","document","addEventListener","dark_btn","getElementById","isEnabled","event","disable","enable","mode","brightness","contrast","sepia"],"mappings":"AAAA;AACA;AACA;AACA;AAEAA,OAAO,CAAC,YAAD,CAAP,CAAsBC,KAAtB;;AACAD,OAAO,CAAC,YAAD,CAAP,CAAsBC,KAAtB;;AACAD,OAAO,CAAC,sBAAD,CAAP,CAAgCC,KAAhC;;AACAD,OAAO,CAAC,UAAD,CAAP;;AAEA,OAAO,6BAAP;AACA,OAAO,8BAAP;AACA,OAAO,yBAAP;AAEA,OAAO,uCAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AACAA,OAAO,CAAC,8BAAD,CAAP;;AACAA,OAAO,CAAC,MAAD,CAAP;;AACAA,OAAO,CAAC,mBAAD,CAAP;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B,C,CAEA;;;AACAG,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,EAA6C,YAAM;AACjD,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,cAAT,CACf,eADe,CAAjB;AAGA,MAAIC,SAAS,GAAG,KAAhB;AACAF,EAAAA,QAAQ,CAACD,gBAAT,CAA0B,OAA1B,EAAmC,UAACI,KAAD,EAAW;AAC5C,QAAID,SAAJ,EAAe;AACbL,MAAAA,UAAU,CAACO,OAAX;AACAF,MAAAA,SAAS,GAAG,KAAZ;AACD,KAHD,MAGO;AACLL,MAAAA,UAAU,CAACQ,MAAX,CAAkB;AAChBC,QAAAA,IAAI,EAAE,CADU;AAEhBC,QAAAA,UAAU,EAAE,GAFI;AAGhBC,QAAAA,QAAQ,EAAE,GAHM;AAIhBC,QAAAA,KAAK,EAAE;AAJS,OAAlB;AAMAP,MAAAA,SAAS,GAAG,IAAZ;AACD;AACF,GAbD;AAcD,CAnBD","sourcesContent":["// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\n\nrequire('@rails/ujs').start();\nrequire('turbolinks').start();\nrequire('@rails/activestorage').start();\nrequire('channels');\n\nimport 'bootstrap/dist/js/bootstrap';\nimport 'bootstrap/dist/css/bootstrap';\nimport 'stylesheets/application';\n\nimport '@fortawesome/fontawesome-free/css/all';\n\n// Uncomment to copy all static images under ../images to the output folder and reference\n// them with the image_pack_tag helper in views (e.g <%= image_pack_tag 'rails.png' %>)\n// or the `imagePath` JavaScript helper below.\n//\n// const images = require.context('../images', true)\n// const imagePath = (name) => images(name, true)\nrequire('stylesheets/application.scss');\nrequire('trix');\nrequire('@rails/actiontext');\nconst DarkReader = require('darkreader');\n\n// Dark mode handler\ndocument.addEventListener('turbolinks:load', () => {\n  const dark_btn = document.getElementById(\n    'dark_mode_btn'\n  );\n  let isEnabled = false;\n  dark_btn.addEventListener('click', (event) => {\n    if (isEnabled) {\n      DarkReader.disable();\n      isEnabled = false;\n    } else {\n      DarkReader.enable({\n        mode: 2,\n        brightness: 100,\n        contrast: 100,\n        sepia: 10,\n      });\n      isEnabled = true;\n    }\n  });\n});\n"]},"metadata":{},"sourceType":"module"}